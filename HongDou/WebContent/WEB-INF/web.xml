<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<welcome-file-list>
		<welcome-file>userLogin.jsp</welcome-file>
	</welcome-file-list>
	<!-- 加到任何servlet映射的顶部,不然可能有些路径不能被过滤到
         http://urlrewritefilter.googlecode.com/svn/trunk/src/doc/manual/3.2/index.html
     -->
     <!-- 分割线 -->
       <!-- 加到任何servlet映射的顶部,不然可能有些路径不能被过滤到
         http://urlrewritefilter.googlecode.com/svn/trunk/src/doc/manual/3.2/index.html
     -->
    
        
        <!-- 
            设置日志级别（将被记录到日志中）
               可以为: TRACE, DEBUG, INFO (default), WARN, ERROR, FATAL, log4j, commons, slf4j,
               比如 sysout:DEBUG（设置到控制台调试输出级别） 
            (默认级别 WARN) -->
   
    
  
    
    
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
     <!-- 分割线 -->
	<display-name>springMVC</display-name>
	<welcome-file-list>
		<welcome-file>userLogin.jsp</welcome-file>
	</welcome-file-list>
	<!-- 指定Spring配置文件的位置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<!-- 指定以Listerner方式启动Spring -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>springMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 可以自定义servlet.xml配置文件的位置和名称，默认为WEB-INF目录下，名称为[<servlet-name>]-servlet.xml，如spring-servlet.xml -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springMVC</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.css</url-pattern>
		<url-pattern>*.jpg</url-pattern>
		<url-pattern>*.jpeg</url-pattern>
		<url-pattern>*.gif</url-pattern>
		<url-pattern>*.mp3</url-pattern>
		<url-pattern>*.swf</url-pattern>
		<url-pattern>*.mp4</url-pattern>
		<url-pattern>*.ico</url-pattern>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>
	<filter>
		<filter-name>SpringOpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>SpringOpenSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 控制乱码 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
    <!-- 配置 HiddenHttpMethodFilter: 把 POST 请求转为 DELETE、PUT 请求 -->
     <filter>
         <filter-name>HiddenHttpMethodFilter</filter-name>
         <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
     </filter>
     
     <filter-mapping>
         <filter-name>HiddenHttpMethodFilter</filter-name>
         <url-pattern>/*</url-pattern>
     </filter-mapping>
	<!-- 登陆过滤器 -->
	<!-- <filter> <filter-name>LoginFilter</filter-name> <filter-class>com.howin.util.LoginFilter</filter-class> 
		</filter> <filter-mapping> <filter-name>LoginFilter</filter-name> <url-pattern>/user/*</url-pattern> 
		</filter-mapping> -->
	<!-- 用户监听器 -->
	<!-- <listener> <description>sessionlistener</description> <listener-class>com.howin.util.CountOfUserListener</listener-class> 
		</listener> -->
	<!-- 设置session时长 -->
 	 <session-config>
	 	<session-timeout>540</session-timeout>
	 </session-config>
	<error-page>
      <error-code>404</error-code>   
         <location>/error404.jsp</location>
   </error-page>
   
	<error-page>
      <error-code>500</error-code>   
         <location>/error500.jsp</location>
  	</error-page>
   <error-page>
       <exception-type>java.lang.Throwable</exception-type>
          <location>/error500.jsp</location>
   </error-page>
</web-app>